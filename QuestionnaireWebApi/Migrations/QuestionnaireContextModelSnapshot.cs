// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using QuestionnaireWebApi.Models;
using System;

namespace QuestionnaireWebApi.Migrations
{
    [DbContext(typeof(QuestionnaireContext))]
    partial class QuestionnaireContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuestionnaireWebApi.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("QuestionDescription");

                    b.Property<int>("Type");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuestionnaireWebApi.Models.Questionnaire", b =>
                {
                    b.Property<int>("QuestionnaireId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("QuestionnaireDescription");

                    b.Property<string>("QuestionnaireName");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("QuestionnaireId");

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("QuestionnaireWebApi.Models.QuestionnaireAnswer", b =>
                {
                    b.Property<int>("QuestionnaireAnswerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answer");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("QuestionId");

                    b.Property<int?>("QuestionnaireId");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("QuestionnaireAnswerId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("QuestionnaireAnswers");
                });

            modelBuilder.Entity("QuestionnaireWebApi.Models.QuestionnaireQuestions", b =>
                {
                    b.Property<int>("QuestionnaireId");

                    b.Property<int>("QuestionId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Order");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("QuestionnaireId", "QuestionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionnaireQuestions");
                });

            modelBuilder.Entity("QuestionnaireWebApi.Models.QuestionnaireAnswer", b =>
                {
                    b.HasOne("QuestionnaireWebApi.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("QuestionnaireWebApi.Models.Questionnaire", "Questionnaire")
                        .WithMany()
                        .HasForeignKey("QuestionnaireId");
                });

            modelBuilder.Entity("QuestionnaireWebApi.Models.QuestionnaireQuestions", b =>
                {
                    b.HasOne("QuestionnaireWebApi.Models.Question", "Question")
                        .WithMany("QuestionnaireQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QuestionnaireWebApi.Models.Questionnaire", "Questionnaire")
                        .WithMany("QuestionnaireQuestions")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
